#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

fortigate_memory_default_levels = (70, 80)

def check_fortigate_memory(item, params, info):
    warn, crit = params
    current = saveint(info[0][0])
    state = 0
    icon = ''
    if current >= warn:
        state = 1
	icon = "(!)"
    if current >= crit:
        state = 2
	icon = "(!!)"

    perf = [("mem_usage", current, warn, crit, 0, 100)]
    return(state, nagios_state_names[state] + " - %d%%%s (levels at %d/%d percent)" % (current, icon, warn, crit), perf)

# For version 4
#1.3.6.1.4.1.12356.101.4.1.4.0
check_info["fortigate_memory"] = {
    "check_function"        : check_fortigate_memory,
    "inventory_function"    : lambda info: [(None, "fortigate_memory_default_levels")],
    "service_description"   : "Memory usage",
    "has_perfdata"          : True,
    "group"                 : "memory",
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.4.1.12356.101.4.1.4.0"),
    "snmp_info"		    : ( ".1.3.6.1.4.1.12356.101.4.1", [ 4 ]),
}

#    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.4.1.12356.1.9.0"),
#    "snmp_info"		    : ( ".1.3.6.1.4.1.12356.1", [ 9 ]),
